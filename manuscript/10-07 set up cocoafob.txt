### Product fulfillments in detail

To complete the app setup in your store, we'll need to wire the license generator to create a new license for every purchase. Automatic actions on order completion are called "fulfillment".

Have a closer look at the "Fulfillment" group on the product page. By default, the group displays "Digital Product/Service" in a label in its top-right corner, a "No Fulfillment" placeholder in the middle, and a couple of actions at the bottom.

"Add Fulfillment" and "Show Disabled Fulfillments" are self-explanatory, and we'll have a look at available fulfillments in a second. The third action, "Change Product Format", allows you to switch from digital to physical goods and enable shipment. The choice you make here affects the available fulfillment options. If you sell amazing swag for your brand like coffee mugs and t-shirts, or if you offer printed books, this might be worth a second look one day. For now, we'll stick to digital products without physical shipment. 

When you pick "Add Fulfillment", you'll be presented with four options:

- "Send Email", which is useful to send a personalized message to customers. You can also include the license keys and other niceties like app activation links in these emails. I highly recommend you check out [the instructions in the appendix.](#email) For now, we'll skip this optional step.
- "Generate a License" is exactly what we're going to pick; but first have a look at the other options.
- "Provide a File Download" is meant for a different business model involving protected, time-limited downloads. Since we're locking our app's functionality behind a paywall that requires a license, it doesn't make sense to _also_ limit the download. Quite the contrary: I suggest you make the app free to download and test-drive for a while instead to create more interest in your app. With the approach laid out in this book, this option is not very useful.
- "Create a Signed PDF" is not useful for our purposes, but you can pick this option if you sell ebooks in your store. You can have the customer name printed on every page of the PDF, which is supposed to prevent file sharing to some extent. I do like that this feature exists, but I doubt it'll really protect your content from being pirated.

### Configure license code generation via CocoaFob

![Choose CocoaFob-based license generation from the fulfillment options](images/10-101-generate-license.png)

Still on the "Add Fulfillment Action" screen, pick "Generate a License", and then choose "CocoaFob" from the list of license generators.[^objcfob] Hit the "Next" button to set up the generator.

[^objcfob]: Yeah, I know the description text still says "Objective-C", but it really is more versatile than that. I personally take care of the Swift port to work as expected, since I rely on the library in my own apps, too. Skin in the game.

In the setup form, pick a "Product Name" for CocoaFob to use for the license generator when encoding the license details into a license code. This could be the same as the product path in FastSpring, e.g. "my-new-app", a numeric product identifier, or any other unique string. 

![The license generation setup form](images/10-102-license-form.png)

You will be using the same string in your app later to decode a license code and then verify its contents. For example, if I decode a license in my Mac app TableFlip and the resulting product name turns out to be "duke-nukem-forever" or something, I don't want the license to pass even though I was able to decode it successfully. Don't worry, though, this example is totally made up. In practice, a mixup like this shouldn't be possible because the keys used during license code creation will be different for each app and the decoding step should fail. You cannot unlock app A with a code for app B since the apps supposedly use different keys during the encoding step.

What is a good product name for a license code generator and it's counterpart, the license code verifier in your app? After all, you set up all this to prevent software piracy to some extent. Thinking about potential hackers of your verification code, they might indeed an easier time scanning app for a string that corresponds to the app's name, like "`mynewapp`". A random product name like "`/g}eJ3U8bG29r+wfcZ;`" will be much harder to guess, and then locate in a hex dump of the application binary. I think this is a bit overkill, though. The potential security upside is negligible: if someone has the means to perform these kinds of actions to crack your code, you likely won't hinder them much by obfuscating the CocoaFob product name string. As mortal human beings, we app developers prefer sensible strings naturally, and I think it's okay to roll with this impulse. It's much easier to detect the typos in "mnyweapp" than it is in a nonsensical string of random characters.

But please, do consider both approaches carefully. The obfuscation may appeal to you for good reason. Then again, with every action you take on the copy protection front, you also send a message to yourself and reinforce your beliefs. Do you want this message to say "I am very freaked out about my things being stolen" and "the world is dangerous", or rather one along the lines of "people should be incentivized to pay for quality products" and "the world deserves an app as good as mine" and stop there? -- I personally want to spread my stuff. But I cannot afford to do it for free, or I'll starve. I'm not worried about piracy. Folks who really use my apps professionally will pay anyway. It seems people are inclined to hunt for paid apps and sustainable businesses instead of free apps because they are worried about the continued development and support of tools they rely on. This is true for professionals looking for better tools; less so for gamers, I would think. I also don't create freeware applications most of the time and try to charge even a small amount not because I'm greedy, but because one of my core beliefs is that nobody can afford not to pay for professional app development in the long run. At least not in the world we inhabit, where you need to work to make money to survive. This is just another opportunity to do some soul-searching, get clarity about what you value, and be honest with yourself.

With a product name set, the "DSA Private Key" finally comes next. 
