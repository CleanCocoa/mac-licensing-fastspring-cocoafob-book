# Sample App 1: How to Verify License Codes in Your App {#chapter2}

According to the license template I recommended earlier, `#{product},#{name}` produces a license code that is just an encrypted form of, for example, "`MyNewApp,Christian Tietze`".

A license code is invalid when checked against that template if it satisfies at least one of the following criteria:

* The license code is not a string that was encrypted by a private key which matches the public key used by the app for decrypting.
* Parsing the decrypted string doesn't meet expectations because the expected product name doesn't match or is missing, or
* because the extracted licensee name doesn't match what the user entered.

As we've discussed, the algorithm can be adjusted a fair bit. You can try different keys to decrypt; and you can try different license templates upon failure to support both personalized and non-personalized license codes.

We need to utilize the CocoaFob algorithm to decrypt a code and then create an abstraction of all the info we need in the application so we have something to work with. This can look like the types I sketched [a few chapters ago](#statechange). Missing from the short segue into modeling a state machine's state back then was the implementation of services that perform the work and react to changes. This chapter is dedicated to implement all that, but without the additional work of implementing a trial mode. You will learn what the essence of locking functionality away behind license code paywalls means. In the next chapter, we will build upon all this and add a time-based trial.

**You can find a fully functional sample app in the book's code repository.** It's inside the aptly named [`No-Trial-Verify-at-Start` folder.](https://github.com/CleanCocoa/mac-licensing-fastspring-cocoafob/tree/master/No-Trial-Verify-at-Start) Should any direct link ever break, head over to my website which should be around for as long as the internet and I stay alive in one way or another: `https://christiantietze.de/`
