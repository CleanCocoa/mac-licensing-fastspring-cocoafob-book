# Parting Words

Congratulations for taking this first step towards your own freedom as a creative professional. You're awesome!

You've accomplished quite a lot in this book. You added the infrastructure to read and write both license and trial information. And you're able to transition the app's state into "registered", "on trial", and "unregistered". That's the framework for incentivizing people on the internet to pay for your free-to-download application.

Of course every app can be cracked. As I said, the license verification keys can be changed in the app's binary. Or someone replaces `licenseIsValid(_:)->Bool` with a stub that always returns `true`. I am no security expert, neither am I a hacker. I wouldn't know how to do that. But I think it's not worth to worry too much about it. In making your app harder to crack lies no opportunity to make 10x your current revenue. The opportunity to increase your revenue lies elsewhere: in great feature additions, in new software projects, in excellent customer support.

What you've learned in this book is a big part of selling your software outside the Mac App Store. When you add the license verification and have your FastSpring account set up, you're ready to put your app out there for sale _today._ Congratulations!

Once you get traction, it becomes easier to promote and sell your products. Until then you'll have to hustle, to find people who believe in your product, and you have to continue to make it better. Every overnight success story actually has a very long history of troubles and barely getting by. 

Persevere. And get high quality feedback from other people. Find a Mastermind group of helpful people to course-correct you when needed. Sole developers and "solopreneurs" in general tend to be overly optimistic in their success. Stupid mistakes and missed opportunities can put you back months. Feedback from other people helps to circumnavigate such obstacles. You'll notice when you are emotionally attached to the success of your project: your preferences will shift and your decision-making will have changed. -- Wait, did I say "you'll notice"? No, you will _not_ notice until other people tell you how stupid you are. A Mastermind group is a great tool because it is based on honest sharing and reciprocity: unlike friends and family, your Mastermind group will understand what you're going through. And since everyone in the group tries to be as helpful as he or she can be, the feedback will be better.

Like that one day before I worked on TableFlip for Mac, a visual table editor for Markdown users. 

After a few days of occasional brainstorming, mulling things over in my head, and then putting the pieces together in a "Lean Canvas" format, I figured the best name for a "Markdown table editor" would be "TableDown." So I quickly registered the domain `tabledownapp.com` before someone else grabs it. You never know, right? And thus I got invested in the name.

Oh how my best pal both laughed and screamed at me when I told him. The name "TableDown" itself is a downer. Not sexy at all. I knew, but I didn't want to admit. I was short on cash and wanted to move on with the project, not talking about names and stuff. Still, for some magical reason I didn't close my ears shut but took his advice to heart. So I gave in and asked for honest feedback. Then we changed a few pieces on the canvas together. He was a great sounding board. And I was an idiot for rushing things and settling on the next best idea. 

When I relaxed after the surge of negative emotions for being criticized and laughed at died down, we looked for a new name. We tried different word combinations and I liked "table flip," because of the meme and the emoji you probably know:

    (╯°□°）╯︵ ┻━┻

It was fun, in a way internet people will understand. Markdown is a child of the internet, so it was a good fit, like an in-group joke. But "write table markup" and "flip" didn't click. 

I looked for excuses to still call it "TableFlip." What could "flipping a document" mean? Like having two sides of the same document, a textual and a visual side. In the end, I defined "flipping" to mean that TableFlip always shows what's inside a Markdown file, even when you edit it using another editor. TableFlip will pick up changes you make to the file, visualizing the tables in the document. It then makes editing tabular data simple so you can perform changes and "flip" them back. 

Today I still feel like a genius for having that idea. Sure, the task became more complex than a mere table editor that saves to a file or to the clipboard. But the project as a whole became a lot more inspiring. It's the most awesome feature of the whole app, I'd say. None of that would've happened had I kept "TableDown," _The Sad Markdown Table Editor._

TL;DR: Feedback is important. You will sometimes be an idiot when it comes to managerial decisions, especially when you enjoy coding more than you enjoy business development. Or when you're under pressure. It's hard to wear all these different hats. 

