## Setting Up Your App for Sale in FastSpring

Sign in to your [SpringBoard](https://springboard.fastspring.com/) where you can manage your business things.

![The SpringBoard after logging in. You can create new products under "Products and Pages".](images/10-050-springboard.png)

After signing in, you have to set up your app for sale. 

That means we will create a new product. FastSpring offers selling of any digital good, be it software, music, e-books, subscriptions -- you name it. FastSpring even allow to configure shipment of CDs, for example. So don't look for the words "application" or "software" when you navigate around your SpringBoard. FastSpring's terminology focuses on the more general term "products".

### Create the Product 

The SpringBoard is generally divided into the topmost navigation, a larger content section to the left, and a smaller info and action section in a sidebar to the right.

Pick "Create Product" from the _Actions_ sidebar to the right. If you have already prepared an app in the past, skip to the next section where we set up license code generation.

I am going to call the app of this book, well, **"New App"**.

I won't set a different display name or customize the URL path. These settings are up to you if you want to experiment with them. Make sure to add a price, though, in order for test checkouts to work. Products without a price don't seem to work there.

Whatever you configure your product to look like, most of it won't matter for our case -- _except the name._ The product name will be used for license code generation and automatic order processing in the app. If all that sounds like mumbo-jumbo to you, don't worry, we'll get there. Just make sure you know your app's name.

![Springboard showing the recently created product](images/10-100-app-created.png)

You may want to leave the product in "Test" mode until you finished everything. "Active" products are visible on your store. "Test" products are invisible except for you. They work well with test checkouts on the store and from within the app, though. FastSpring is very flexible and you can test the heck out of the store without consequences like being billed for a checkout.


### Configure License Code Generation via CocoaFob

![Choose CocoaFob-based license generation from the fulfillment options](images/10-101-generate-license.png)

You will find license code generation under "Fulfillment Actions" at the bottom.

There's a plethora of actions to chose from. You can send customizable e-mails with the license code (which I recommend), you can sign an e-book with the customer's name as a means to protect the PDF from being copied, or you can ship a volume with the software as a physical object. I find PDF signing pretty cool if you want to sell e-books and worry about file-sharers. Then again there are websites which buy books, sign them with their URL, and give the copy away for free. They probably monetize through ads.

So add a fulfillment action, pick "Generate a License" from the options, and use CocoaFob. Hit "Next".

Pick a name for CocoaFob to use for the licenses. This doesn't have to be the same as your FastSpring product ID or product name (`newapp` or "New App" in my case, respectively).

In fact, you can use the product name field of the license generator to include versioning information or whatever you want to differentiate generated licenses.


![The license generation setup form](images/10-102-license-form.png)

I picked a license template of `#{product},#{name}` so that each license code is unique per product and licensee. To unlock the app, users have to provide both the license code and the licensee's name.

I prefer personalized license codes. You could also utilize them to check how often a given license is used and deactivate illegally shared licenses if you're into that kind of thing.

It's important that you don't change the CocoaFob product name if you include `#{product}` in the license template. If you change the template or the template's variables' contents, you have to change the license verification code in your app, so new licenses won't be compatible to old ones and vice versa.

More recently, I've come to take a simpler template into consideration, omitting the licensee's name, because using a template of `#{product}` only is useful to allow bulk-generating licenses. If you ever want to participate in a bundle sale, this can make things a lot easier as some bundle organizers simply deliver a non-personalized license code from a long list you provide.

To support non-personalized license codes next to your standard personalized license code verification, you'd have to supply a second algorithm (or object) in code which doesn't take the licensee's name into account, even though the form can look the same, of course.

I was lucky to participate in a bundle which we sold via FastSpring, so I could simply duplicate my product settings. See [the bonus content](#sellbundles) at the end of the book for details about bundle setup. 

