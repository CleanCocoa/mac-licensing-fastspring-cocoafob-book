## Check for License During Application Launch

Obtaining the current state of the app depends on whether a valid license is present.

I mentioned `LicenseProvider` already. It's responsible for reading a `License` from `NSUserDefaults`.

If a `License` is present, this indicates that the application is not `.unregistered` anymore but `.registered(_)`.

Using `LicenseProvider`, we can add `LicenseStateProvider` which wraps the result in the `LicenseState` enum:

    public class LicenseStateProvider {
        let licenseProvider: LicenseProvider
    
        public init(licenseProvider: LicenseProvider) {
            self.licenseProvider = licenseProvider
        }
        
        public lazy var licenseVerifier: LicenseVerifier = LicenseVerifier()
        
        public var currentLicenseState: LicenseState {
            if let license = self.license(),
                license.isValid(licenseVerifier) {
                return .registered(license)
            }
        
            return .unregistered
        }
    
        func license() -> License? {
            return licenseProvider.currentLicense
        }
    }

Once `LicenseStateProvider` is set up, its `currentLicenseState` computed property can be used throughout the application to obtain the information needed. It's not caching the value, so the result will always be fresh.

`AppDelegate` is a good place to start implementing the initial check upon launch:

    var currentLicenseState: LicenseState {
        return licenseInfoProvider.currentLicenseState
    }
    
    func launchAppOrShowLicenseWindow() {
        
        switch currentLicenseState {
        case .unregistered:
            if licenseIsInvalid() {
                displayInvalidLicenseAlert()
            }
    
            showRegisterApp()
        case .registered(_):
    
            unlockApp()
        }
    }

Only unlock the app if `LicenseStateProvider` returns `.registered(_)` with a valid license.

`LicenseStateProvider` should do the check so no invalid license information leak by obtaining `currentLicenseState`. Better keep the invariant protected. 

If you want to display there was a problem with the stored license, you have to do some extra work, though: check if `LicenseProvider` returns a `License` value even though the app is unregistered and display an alert.

In your application, you should put the details into another object to keep your `AppDelegate` slim. I sometimes set up a few foundational objects in an object of type `AppDependencies`. Breaking up objects makes them easier to test and reason about.
